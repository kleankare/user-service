services:
  postgres:
    image: postgres:latest
    container_name: user-service-postgres
    ports:
      - 5432:5432
    env_file:
      - ../.env.example
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
    extends:
      file: common-config.yaml
      service: network-deploy-service

  redis:
    image: redis:latest
    container_name: user-service-redis
    ports:
      - 6379:6379
    env_file:
      - ../.env.example
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "${REDIS_PASSWORD}"
    volumes:
      - redis_data:/var/lib/redis/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "--raw", "incr", "ping" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
    extends:
      file: common-config.yaml
      service: network-deploy-service

  user-service:
    build:
      context: ../
      dockerfile: ./build/package/Dockerfile.dev
    container_name: user-service
    ports:
      - "8080:8080"
    env_file:
      - ../.env.example
    volumes:
      - ../:/app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    extends:
      file: common-config.yaml
      service: network-deploy-service

networks:
  user-service:
    driver: bridge

volumes:
  postgres_data:
  redis_data: