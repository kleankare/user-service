apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}-postgres-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}-postgres
    spec:
      containers:
        - name: {{ .Values.app.name }}-postgres
          image: postgres
          resources:
            limits:
              memory: 512Mi
              cpu: "2"
            requests:
              memory: 256Mi
              cpu: "0.2"
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.db }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password }}
            - name: TZ
              value: {{ .Values.postgres.timezone }}
          readinessProbe:
            successThreshold: 1
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U {{ .Values.postgres.user }} -d {{ .Values.postgres.db }} 
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: {{ .Values.app.name }}-{{ .Values.postgres.storage.pvc_name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app.name }}-{{ .Values.postgres.service.name }}
spec:
  selector:
    app: {{ .Values.app.name }}-postgres
  ports:
    - name: {{ .Values.app.name }}-postgres
      protocol: TCP
      port: {{ .Values.postgres.port }}
      targetPort: {{ .Values.postgres.port }}